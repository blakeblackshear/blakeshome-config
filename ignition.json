{
  "ignition": {
    "config": {},
    "timeouts": {},
    "version": "2.1.0"
  },
  "networkd": {},
  "passwd": {
    "users": [
      {
        "name": "core",
        "sshAuthorizedKeys": [
          "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCrOJ0dRoMpSrSb9pQhd6bzFzoMpCKsBU2z1NlwEgR1zB5kQoE27fJ9csrncLod2lp5MhUWxGi8ar2HtNTjcGZUGV5vtt7DyR5F2nEgdhJF7MbJaSdThzjUPKQUW6xoQuo09+8KsHnjGwTsjV/hepg+WzkKOfrk2EuxDqhSxvM8X2meSyxPFN6yrAU8yc0WTbZ/IoLhgXuGfkQ8TK301XclFF3BWQSLKST1qZFkJEDfwV+H3E+TI4ec7ljj2uz+rgqLhPv5ia/Nv3GLDKFaSuWmaIpr/zn+U2eWv89BpvXp1AmIGJGbukgbRiGrHR4Sft7hKqx0fug/KXacck1gbczJ blake@Blakes-MacBook-Pro.local"
        ]
      }
    ]
  },
  "storage": {
    "directories": [
      {
        "filesystem": "root",
        "group": {},
        "path": "/srv/blakeshome",
        "user": {}
      }
    ],
    "files": [
      {
        "filesystem": "root",
        "group": {},
        "path": "/etc/hostname",
        "user": {},
        "contents": {
          "source": "data:,blakeshome1",
          "verification": {}
        },
        "mode": 420
      },
      {
        "filesystem": "root",
        "group": {},
        "path": "/var/lib/iptables/rules-save",
        "user": {},
        "contents": {
          "source": "https://raw.githubusercontent.com/blakeblackshear/blakeshome-config/master/iptables-rules-save",
          "verification": {}
        }
      }
    ]
  },
  "systemd": {
    "units": [
      {
        "contents": "[Unit]\nDescription=Set the time zone\n\n[Service]\nExecStart=/usr/bin/timedatectl set-timezone America/Chicago\nRemainAfterExit=yes\nType=oneshot\n",
        "enable": true,
        "name": "settimezone.service"
      },
      {
        "contents": "[Unit]\nBefore=local-fs.target\n\n[Mount]\nWhat=/dev/sdb1\nWhere=/media/passwords\n\n[Install]\nWantedBy=local-fs.target\n",
        "enable": true,
        "name": "media-passwords.mount"
      },
      {
        "enable": true,
        "name": "iptables-restore.service"
      },
      {
        "contents": "[Unit]\nDescription=Install docker-compose\nConditionPathExists=!/opt/bin/docker-compose\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/usr/bin/mkdir -p /opt/bin/\nExecStart=/usr/bin/curl --create-dirs -o /opt/bin/docker-compose -sL https://github.com/docker/compose/releases/download/1.18.0/docker-compose-linux-x86_64\nExecStart=/usr/bin/chmod +x /opt/bin/docker-compose\n\n[Install]\nWantedBy=multi-user.target\n",
        "enable": true,
        "name": "install-docker-compose.service"
      },
      {
        "contents": "[Unit]\nDescription=Download blakeshome config\nConditionPathExists=!/srv/blakeshome/.git\nWants=network-online.target\nAfter=network-online.target media-passwords.mount\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/usr/bin/git clone git://github.com/blakeblackshear/blakeshome-config.git /srv/blakeshome\n\n[Install]\nWantedBy=multi-user.target\n",
        "enable": true,
        "name": "config-blakeshome.service"
      },
      {
        "contents": "[Unit]\nDescription=Decrypt blakeshome config\nWants=network-online.target\nAfter=network-online.target config-blakeshome.service media-passwords.mount\n\n[Service]\nEnvironmentFile=/media/passwords/PASSWORDS.env\nType=oneshot\nRemainAfterExit=yes\nExecStart=/srv/blakeshome/decrypt.sh\n\n[Install]\nWantedBy=multi-user.target\n",
        "enable": true,
        "name": "decrypt-blakeshome.service"
      },
      {
        "contents": "[Unit]\nDescription=Blakeshome (docker machine)\nWants=network-online.target\nAfter=network-online.target config-blakeshome.service decrypt-blakeshome.service install-docker-compose.service\n\n[Service]\nEnvironmentFile=/srv/blakeshome/DOCKER.env\nType=oneshot\nRemainAfterExit=yes\nWorkingDirectory=/srv/blakeshome\nExecStart=/opt/bin/docker-compose up -d\nExecStop=/opt/bin/docker-compose down\n\n[Install]\nWantedBy=multi-user.target\n",
        "enable": true,
        "name": "blakeshome.service"
      },
      {
        "contents": "[Unit]\nDescription=Blakeshome (docker machine)\nWants=network-online.target\nAfter=network-online.target blakeshome.service\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=-/bin/docker exec acme.sh --issue --dns dns_cf -d blakeshome.com\nExecStart=-/bin/docker exec acme.sh --issue --dns dns_cf -d unifi.blakeshome.com\n\n[Install]\nWantedBy=multi-user.target\n",
        "enable": true,
        "name": "cert-blakeshome.service"
      }
    ]
  }
}
