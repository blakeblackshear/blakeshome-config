version: "3"
services:
  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto:latest
    volumes:
      - /srv/blakeshome/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - mosquitto_data:/mosquitto/data
    ports:
      - "1883:1883"
      - "9001:9001"
  portainer:
    container_name: portainer
    restart: always
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data
    ports:
      - "127.0.0.1:9000:9000"
  unifi:
    container_name: unifi
    restart: unless-stopped
    image: jacobalberty/unifi
    volumes:
      - unifi:/unifi
    network_mode: host
    environment:
      TZ: "America/Chicago"
      RUNAS_UID0: "false"
  unifi_backup:
    container_name: unifi_backup
    restart: unless-stopped
    build:
      context: unifi_backup
    volumes:
      - unifi:/unifi
    environment:
      TZ: "America/Chicago"
      ENCRYPTION_KEY: "${UNIFI_BACKUP_ENCRYPTION_KEY}"
      AWS_ACCESS_KEY_ID: AKIAIUDDE7N2WIGEYOPA
      AWS_SECRET_ACCESS_KEY: "${UNIFI_AWS_SECRET}"
      AWS_DEFAULT_REGION: us-east-2
  googletracker:
    container_name: google_tracker
    restart: unless-stopped
    build:
      context: googletracker
    environment:
      TZ: "America/Chicago"
      EMAIL: blakeshome.tracker@gmail.com
      PASSWORD: "${GOOGLETRACKER_PASSWORD}"
      POLL_INTERVAL: 300
      MQTT_SERVER: mqtt.blakeshome.com
      HOME_LATITUDE: "${GOOGLETRACKER_HOME_LATITUDE}"
      HOME_LONGITUDE: "${GOOGLETRACKER_HOME_LONGITUDE}"
    network_mode: host
  zway_ws_mqtt_bridge:
    container_name: zway_ws_mqtt_bridge
    restart: unless-stopped
    build:
      context: zway_ws_mqtt_bridge
    environment:
      TZ: "America/Chicago"
      MQTT_SERVER: mqtt://mqtt.blakeshome.com
    network_mode: host
  # mqttlogger:
  #   container_name: mqttlogger
  #   restart: unless-stopped
  #   build:
  #     context: mqttlogger
  #   environment:
  #     TZ: "America/Chicago"
  #   network_mode: host
  homeassistant:
    container_name: hass
    image: homeassistant/home-assistant:0.73.2
    volumes:
      - /srv/blakeshome/home-assistant:/config
    network_mode: host
    environment:
      TZ: "America/Chicago"
  pihole:
    container_name: pihole
    restart: unless-stopped
    build:
      context: pihole
    environment:
      TZ: "America/Chicago"
      WEBPASSWORD: "${DOCKER_PIHOLE_PW}"
      ServerIP: 192.168.2.2
      VIRTUAL_HOST: pihole.blakeshome.com
      INTERFACE: enp3s0
      DNSMASQ_LISTENING: local
      DHCP_ACTIVE: "true"
      DHCP_START: 192.168.2.30
      DHCP_END: 192.168.2.251
      DHCP_ROUTER: 192.168.2.1
      DHCP_LEASETIME: 1
      PIHOLE_DOMAIN: local
    volumes:
      - pihole:/etc/pihole
      - /srv/blakeshome/pihole/dnsmasq.d:/etc/dnsmasq.d
      - /srv/blakeshome/pihole/mqttpub.sh:/opt/mqttpub.sh:ro
    cap_add:
      - NET_ADMIN
    network_mode: host
  oauth2_proxy:
    container_name: oauth2_proxy
    restart: unless-stopped
    image: blakeblackshear/oauth2_proxy
    volumes:
      - /srv/blakeshome/oauth2_proxy:/etc/oauth2_proxy:ro
    network_mode: host
    environment:
      OAUTH2_PROXY_CLIENT_ID: 114257218611-r0nucuv66g6n0h7dcsvnhqprgr6rq1jg.apps.googleusercontent.com
      OAUTH2_PROXY_CLIENT_SECRET: "${OAUTH2_PROXY_CLIENT_SECRET}"
      OAUTH2_PROXY_COOKIE_SECRET: "${OAUTH2_PROXY_COOKIE_SECRET}"
      OAUTH2_PROXY_COOKIE_DOMAIN: blakeshome.com
    command: -config=/etc/oauth2_proxy/oauth2_proxy.cfg
  nginx:
    container_name: nginx
    restart: unless-stopped
    image: rrusakov/nginx-naxsi-nginscript:latest
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/html:/etc/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/whitelist.rules:/etc/nginx/whitelist.rules:ro
      - ssl_certs:/etc/ssl/private:ro
      - ./nginx/cameras:/var/www/cameras:ro
      - camera_stream:/data/cameras
      - camera_nvr:/data/nvr
      - /var/www/public:/var/www/public:ro
    network_mode: host
  lets_encrypt:
    container_name: acme.sh
    restart: unless-stopped
    image: neilpang/acme.sh
    command: daemon
    volumes:
      - ssl_certs:/acme.sh
    network_mode: host
    environment:
      CF_Email: blakeb@blakeshome.com
      CF_Key: "${DOCKER_CF_KEY}"
  camera_back_hls_med:
    container_name: camera_back_hls_med
    restart: unless-stopped
    image: jrottenberg/ffmpeg:4.0-alpine
    command: >-
      -hide_banner -y
      -rtsp_transport tcp -stimeout 5000000 -xerror -use_wallclock_as_timestamps 1 -r 25
      -fflags +genpts -avoid_negative_ts make_zero
      -i "rtsp://viewer:${CAMERA_PASS}@192.168.2.66:554/cam/realmonitor?channel=1&subtype=1"
      -f lavfi -i anullsrc=channel_layout=mono:sample_rate=16000 
      -map 0:0 -map 1:0 -c:v copy -c:a aac -shortest
      -hls_list_size 5 -hls_init_time 1 -hls_time 1 -hls_flags delete_segments+append_list+discont_start+omit_endlist
      -hls_start_number_source epoch
      /stream/back-med.m3u8
    volumes:
      - camera_stream:/stream
  camera_back_hls_low:
    container_name: camera_back_hls_low
    restart: unless-stopped
    image: jrottenberg/ffmpeg:4.0-alpine
    command: >-
      -hide_banner -y
      -rtsp_transport tcp -stimeout 5000000 -xerror -use_wallclock_as_timestamps 1 -r 25
      -fflags +genpts -avoid_negative_ts make_zero
      -i "rtsp://viewer:${CAMERA_PASS}@192.168.2.66:554/cam/realmonitor?channel=1&subtype=2"
      -f lavfi -i anullsrc=channel_layout=mono:sample_rate=16000 
      -map 0:0 -map 1:0 -c:v copy -c:a aac -shortest
      -hls_list_size 5 -hls_init_time 1 -hls_time 1 -hls_flags delete_segments+append_list+discont_start+omit_endlist
      -hls_start_number_source epoch
      /stream/back-low.m3u8
    volumes:
      - camera_stream:/stream
  camera_back_nvr:
    container_name: camera_back_nvr
    restart: unless-stopped
    image: jrottenberg/ffmpeg:4.0-alpine
    command: >-
      -hide_banner -y
      -rtsp_transport tcp -stimeout 5000000 -xerror -use_wallclock_as_timestamps 1 -r 25
      -fflags +genpts -avoid_negative_ts make_zero
      -i "rtsp://viewer:${CAMERA_PASS}@192.168.2.66:554/live"
      -f lavfi -i anullsrc=channel_layout=mono:sample_rate=16000
      -f segment -segment_time 60 -segment_format mp4 -reset_timestamps 1
      -strftime 1 -c copy -an -map 0 /nvr/back-%Y%m%d%H%M%S.mp4
      -map 0:0 -map 1:0 -c:v copy -c:a aac -shortest
      -hls_list_size 5 -hls_init_time 1 -hls_time 1 -hls_flags delete_segments+append_list+discont_start+omit_endlist
      -hls_start_number_source epoch
      /stream/back.m3u8
    volumes:
      - camera_nvr:/nvr
      - camera_stream:/stream
  motion:
    container_name: motion
    restart: unless-stopped
    build:
      context: motion
    volumes:
      - ./motion/motion.conf:/etc/motion/motion.conf:ro
      - ./motion/mask.pgm:/etc/motion/mask.pgm:ro
      - ./motion/conf.d:/etc/motion/conf.d:ro
      - camera_nvr:/nvr
  nvr_snapshot:
    container_name: nvr_snapshot
    restart: unless-stopped
    build:
      context: nvr_snapshot
    environment:
      MONITORDIR: /nvr
    volumes:
      - camera_nvr:/nvr
  nvr_cleaner:
    container_name: nvr_cleaner
    restart: unless-stopped
    build:
      context: nvr_cleaner
    volumes:
      - camera_nvr:/data
    environment:
      FIND_PARAMS: -mmin +20160 # 14*24*60
  samba:
    container_name: samba
    restart: unless-stopped
    image: dperson/samba:latest
    command: -S -n -s "movies;/movies" -w "WORKGROUP" -g "netbios name = FILESERVER"
    network_mode: host
    volumes:
      - movies:/movies

volumes:
  mosquitto_data:
  nodered_data:
  unifi:
  pihole:
  ssl_certs:
  portainer:
  camera_stream:
  camera_nvr:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/data/nvr'
  movies:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/movies'